<section
    id="contact-section"
    class="w-full py-8 md:py-16"
    data-aos="fade-up"
    data-aos-duration="500"
>
    <div class="w-full max-w-[2000px] mx-auto px-4">
        <div class="max-w-3xl mx-auto text-center">
            <h1
                id="contact-title"
                class="text-primary-dark dark:text-primary-light font-black text-3xl md:text-4xl lg:text-5xl mb-6 font-mulish"
                data-aos="fade-down"
                data-aos-delay="200"
            >
                Let's Work Together!
            </h1>
            <p
                data-aos="fade-up"
                data-aos-delay="300"
                class="text-primary-dark dark:text-primary-light font-mulish text-lg leading-relaxed"
            >
                Have an exciting project in mind? Send me an email at <a
                    class="font-bold underline"
                    href="mailto:audywallace00@gmail.com"
                    >audywallace00@gmail.com</a
                >
            </p>
            <div
                class="w-full flex items-center gap-2 px-[10%] py-2"
                data-aos="fade-up"
                data-aos-delay="400"
            >
                <div class="w-full h-1 bg-primary-dark dark:bg-primary-light">
                </div>
                <span
                    class="text-primary-dark dark:text-primary-light font-mulish text-lg font-bold"
                    >or</span
                >
                <div class="w-full h-1 bg-primary-dark dark:bg-primary-light">
                </div>
            </div>
            <p
                data-aos="fade-up"
                data-aos-delay="500"
                class="text-primary-dark dark:text-primary-light font-mulish text-lg mb-8"
            >
                Drop a message below and I'll get back to you ASAP!
            </p>
        </div>

        <div id="statusMessage" class="max-w-2xl mx-auto mb-4 hidden">
            <div class="p-4 rounded-lg text-sm font-medium font-mulish"></div>
        </div>

        <form
            id="contactForm"
            data-aos="zoom-in"
            data-aos-delay="600"
            data-aos-duration="800"
            class="max-w-2xl mx-auto space-y-6 p-8 bg-secondary-light dark:bg-secondary-dark backdrop-blur-sm rounded-xl shadow-2xl"
        >
            <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                <div class="space-y-2">
                    <label
                        for="name"
                        class="block text-primary-dark dark:text-primary-light font-mulish font-medium"
                    >
                        Name
                    </label>
                    <input
                        type="text"
                        id="name"
                        name="name"
                        required
                        class="w-full px-4 py-3 rounded-lg bg-white dark:bg-white/10 border border-gray-300 dark:border-gray-700 text-primary-dark dark:text-primary-light focus:ring-2 focus:ring-primary-blue focus:border-transparent transition duration-200 outline-none"
                        placeholder="Your name"
                    />
                    <span
                        class="error-message text-red-500 text-sm hidden font-mulish"
                    ></span>
                </div>
                <div class="space-y-2">
                    <label
                        for="email"
                        class="block text-primary-dark dark:text-primary-light font-mulish font-medium"
                    >
                        Email
                    </label>
                    <input
                        type="email"
                        id="email"
                        name="email"
                        required
                        class="w-full px-4 py-3 rounded-lg bg-white dark:bg-white/10 border border-gray-300 dark:border-gray-700 text-primary-dark dark:text-primary-light focus:ring-2 focus:ring-primary-blue focus:border-transparent transition duration-200 outline-none"
                        placeholder="your.email@example.com"
                    />
                    <span
                        class="error-message text-red-500 text-sm hidden font-mulish"
                    ></span>
                </div>
            </div>

            <div class="space-y-2">
                <label
                    for="subject"
                    class="block text-primary-dark dark:text-primary-light font-mulish font-medium"
                >
                    Subject
                </label>
                <input
                    type="text"
                    id="subject"
                    name="subject"
                    required
                    class="w-full px-4 py-3 rounded-lg bg-white dark:bg-white/10 border border-gray-300 dark:border-gray-700 text-primary-dark dark:text-primary-light focus:ring-2 focus:ring-primary-blue focus:border-transparent transition duration-200 outline-none"
                    placeholder="What's this about?"
                />
                <span
                    class="error-message text-red-500 text-sm hidden font-mulish"
                ></span>
            </div>

            <div class="space-y-2">
                <label
                    for="message"
                    class="block text-primary-dark dark:text-primary-light font-mulish font-medium"
                >
                    Message
                </label>
                <textarea
                    id="message"
                    name="message"
                    rows="6"
                    required
                    class="w-full px-4 py-3 rounded-lg bg-white dark:bg-white/10 border border-gray-300 dark:border-gray-700 text-primary-dark dark:text-primary-light focus:ring-2 focus:ring-primary-blue focus:border-transparent transition duration-200 outline-none resize-none"
                    placeholder="Tell me about your project..."></textarea>
                <span
                    class="error-message text-red-500 text-sm hidden font-mulish"
                ></span>
            </div>

            <button
                id="submitButton"
                type="submit"
                class="w-full md:w-auto px-8 py-3 bg-primary-blue hover:bg-blue-600 text-white font-mulish font-medium rounded-lg transition duration-200 transform hover:scale-[1.02] focus:ring-2 focus:ring-primary-blue focus:ring-offset-2"
            >
                Send Message
            </button>
        </form>
    </div>
</section>

<style>
    #contact-title {
        position: relative;
        display: inline-block;
        z-index: 1;
    }

    #contact-title::after {
        content: "";
        position: absolute;
        left: 50%;
        top: 70%;
        height: 0.5rem;
        width: 110%;
        background-color: var(--primary-blue);
        box-shadow:
            0 0 5px var(--primary-blue),
            0 0 10px var(--primary-blue),
            0 0 20px var(--primary-blue);
        opacity: 0.8;
        transform: translateX(-50%);
        z-index: -1;
    }

    #contactForm input:-webkit-autofill,
    input:-webkit-autofill:hover,
    input:-webkit-autofill:focus,
    input:-webkit-autofill:active {
        -webkit-box-shadow: 0 0 0px 1000px white inset !important;
        -webkit-text-fill-color: var(--primary-dark) !important;
        transition: background-color 5000s ease-in-out 0s;
    }

    html.dark #contactForm input:-webkit-autofill,
    input:-webkit-autofill:hover,
    input:-webkit-autofill:focus,
    input:-webkit-autofill:active {
        -webkit-box-shadow: 0 0 0px 1000px rgb(255 255 255 / 0) inset !important;
        -webkit-text-fill-color: var(--primary-light) !important;
        transition: background-color 5000s ease-in-out 0s;
    }

    :global(.input-error) {
        border-color: rgb(239 68 68) !important;
    }

    @media (max-width: 402px) {
        #contact-title::after {
            top: 90%;
            width: 100%;
        }
    }
</style>

<script>
    const contactForm = document.getElementById(
        "contactForm",
    ) as HTMLFormElement;
    const submitButton = document.getElementById(
        "submitButton",
    ) as HTMLButtonElement;
    const statusMessage = document.getElementById(
        "statusMessage",
    ) as HTMLElement;
    const statusMessageContent = statusMessage.querySelector(
        "div",
    ) as HTMLElement;

    const showError = (element: HTMLElement, message: string) => {
        const errorElement = element.nextElementSibling as HTMLElement;
        element.classList.add("input-error");
        errorElement.textContent = message;
        errorElement.classList.remove("hidden");
    };

    const hideError = (element: HTMLElement) => {
        const errorElement = element.nextElementSibling as HTMLElement;
        element.classList.remove("input-error");
        errorElement.classList.add("hidden");
    };

    const showStatus = (type: string, message: string) => {
        statusMessage.classList.remove("hidden");
        statusMessageContent.className = "p-4 rounded-lg text-sm font-medium";

        if (type === "error") {
            statusMessageContent.classList.add(
                "bg-red-100",
                "dark:bg-red-900/20",
                "text-red-800",
                "dark:text-red-200",
            );
        } else {
            statusMessageContent.classList.add(
                "bg-green-100",
                "dark:bg-green-900/20",
                "text-green-800",
                "dark:text-green-200",
            );
        }

        statusMessageContent.textContent = message;

        // Hide status message after 5 seconds
        setTimeout(() => {
            statusMessage.classList.add("hidden");
        }, 5000);
    };

    const validateEmail = (email: string) => {
        const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
        return emailRegex.test(email);
    };

    const validateField = (field: HTMLInputElement | HTMLTextAreaElement) => {
        if (field.required && !field.value.trim()) {
            showError(
                field,
                `${field.name.charAt(0).toUpperCase() + field.name.slice(1)} is required`,
            );
            return false;
        }

        if (field.type === "email" && !validateEmail(field.value)) {
            showError(field, "Please enter a valid email address");
            return false;
        }

        if (field.minLength && field.value.length < field.minLength) {
            showError(
                field,
                `${field.name.charAt(0).toUpperCase() + field.name.slice(1)} must be at least ${field.minLength} characters`,
            );
            return false;
        }

        hideError(field);
        return true;
    };

    const inputs = contactForm.querySelectorAll(
        "input, textarea",
    ) as NodeListOf<HTMLInputElement | HTMLTextAreaElement>;
    inputs.forEach((input) => {
        input.addEventListener("input", () => validateField(input));
    });

    contactForm.addEventListener("submit", async (e) => {
        e.preventDefault();
        const formData = new FormData(contactForm);
        const payload = Object.fromEntries(formData.entries());

        let isValid = true;
        inputs.forEach((input) => {
            if (!validateField(input)) {
                isValid = false;
            }
        });

        if (!isValid) {
            showStatus("error", "Please fix the errors before submitting.");
            return;
        }

        submitButton.disabled = true;
        submitButton.textContent = "Sending...";

        try {
            const response = await fetch("/api/email", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json",
                },
                body: JSON.stringify({
                    senderName: payload.name,
                    senderEmail: payload.email,
                    subject: payload.subject,
                    message: payload.message,
                }),
            });
            const data = await response.json();

            if (!response.ok) {
                throw new Error(data.message || "An error occurred");
            }
            showStatus(
                "success",
                "Message sent successfully! I'll get back to you soon.",
            );
            contactForm.reset();
        } catch (error) {
            const errorMessage =
                error instanceof Error
                    ? error.message
                    : "Failed to send message. Please try again.";
            showStatus(
                "error",
                errorMessage || "Failed to send message. Please try again.",
            );
        } finally {
            submitButton.disabled = false;
            submitButton.textContent = "Send Message";
        }
    });
</script>
